BINS ?= $(patsubst cmd/%,%,$(wildcard cmd/*))

build: $(BINS)
$(BINS):
	go build -o $@ ./cmd/$@/

generate:
ifeq (x$(TARGET),x)
	grep -r '^// Code generated by ".*"\; DO NOT EDIT.$\' ./ | awk -F: '{ print $$1 }' | xargs --no-run-if-empty rm
	go generate ./...
else
	grep '^// Code generated by ".*"\; DO NOT EDIT.$\' ./$(TARGET)/* | awk -F: '{ print $$1 }' | xargs --no-run-if-empty rm
	go generate ./$(TARGET)
endif

LINT_IGNORE ?= /cgo \
	      /cmd/cgoase
LINT_IGNORE := $(patsubst %,-e %,$(LINT_IGNORE))
LINT_DO_DIRS = $(shell go list -f '{{.Dir}}' ./... | grep -v $(LINT_IGNORE))

lint:
	golangci-lint run $(LINT_DO_DIRS)

# lint-echo is used by github actions to lint the same files as
# `make lint`.
lint-dirs:
	@echo $(LINT_DO_DIRS)

test: test-cgo test-go
test-cgo:
	go test -cover ./cgo/... ./cmd/cgoase/...
test-go:
	go test -cover ./libase/...

integration: integration-cgo
integration-cgo:
	go test ./tests/cgotest ./examples/cgo/...

GO_EXAMPLES := $(wildcard examples/go/*)
CGO_EXAMPLES := $(wildcard examples/cgo/*)
EXAMPLES := $(GO_EXAMPLES) $(CGO_EXAMPLES)

examples: $(EXAMPLES)

.PHONY: $(EXAMPLES)
$(EXAMPLES):
	@echo Running example: $@
	go run ./$@/main.go
