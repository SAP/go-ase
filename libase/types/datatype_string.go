// Code generated by "stringer -type=DataType"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BIGDATETIMEN-187]
	_ = x[BIGTIMEN-188]
	_ = x[BINARY-45]
	_ = x[BIT-50]
	_ = x[BLOB-36]
	_ = x[BOUNDARY-104]
	_ = x[CHAR-47]
	_ = x[DATE-49]
	_ = x[DATEN-123]
	_ = x[DATETIME-61]
	_ = x[DATETIMEN-111]
	_ = x[DECN-106]
	_ = x[FLT4-59]
	_ = x[FLT8-62]
	_ = x[FLTN-109]
	_ = x[IMAGE-34]
	_ = x[INT1-48]
	_ = x[INT2-52]
	_ = x[INT4-56]
	_ = x[INT8-191]
	_ = x[INTN-38]
	_ = x[LONGBINARY-225]
	_ = x[LONGCHAR-175]
	_ = x[MONEY-60]
	_ = x[MONEYN-110]
	_ = x[NUMN-108]
	_ = x[SENSITIVITY-103]
	_ = x[SHORTDATE-58]
	_ = x[SHORTMONEY-122]
	_ = x[TEXT-35]
	_ = x[TIME-51]
	_ = x[TIMEN-147]
	_ = x[UINT2-65]
	_ = x[UINT4-66]
	_ = x[UINT8-67]
	_ = x[UINTN-68]
	_ = x[UNITEXT-174]
	_ = x[VARBINARY-37]
	_ = x[VARCHAR-39]
	_ = x[VOID-31]
	_ = x[XML-163]
	_ = x[INTERVAL-46]
	_ = x[SINT1-176]
	_ = x[USER_TEXT-25]
	_ = x[USER_IMAGE-32]
	_ = x[USER_UNITEXT-54]
}

const _DataType_name = "USER_TEXTVOIDUSER_IMAGEIMAGETEXTBLOBVARBINARYINTNVARCHARBINARYINTERVALCHARINT1DATEBITTIMEINT2USER_UNITEXTINT4SHORTDATEFLT4MONEYDATETIMEFLT8UINT2UINT4UINT8UINTNSENSITIVITYBOUNDARYDECNNUMNFLTNMONEYNDATETIMENSHORTMONEYDATENTIMENXMLUNITEXTLONGCHARSINT1BIGDATETIMENBIGTIMENINT8LONGBINARY"

var _DataType_map = map[DataType]string{
	25:  _DataType_name[0:9],
	31:  _DataType_name[9:13],
	32:  _DataType_name[13:23],
	34:  _DataType_name[23:28],
	35:  _DataType_name[28:32],
	36:  _DataType_name[32:36],
	37:  _DataType_name[36:45],
	38:  _DataType_name[45:49],
	39:  _DataType_name[49:56],
	45:  _DataType_name[56:62],
	46:  _DataType_name[62:70],
	47:  _DataType_name[70:74],
	48:  _DataType_name[74:78],
	49:  _DataType_name[78:82],
	50:  _DataType_name[82:85],
	51:  _DataType_name[85:89],
	52:  _DataType_name[89:93],
	54:  _DataType_name[93:105],
	56:  _DataType_name[105:109],
	58:  _DataType_name[109:118],
	59:  _DataType_name[118:122],
	60:  _DataType_name[122:127],
	61:  _DataType_name[127:135],
	62:  _DataType_name[135:139],
	65:  _DataType_name[139:144],
	66:  _DataType_name[144:149],
	67:  _DataType_name[149:154],
	68:  _DataType_name[154:159],
	103: _DataType_name[159:170],
	104: _DataType_name[170:178],
	106: _DataType_name[178:182],
	108: _DataType_name[182:186],
	109: _DataType_name[186:190],
	110: _DataType_name[190:196],
	111: _DataType_name[196:205],
	122: _DataType_name[205:215],
	123: _DataType_name[215:220],
	147: _DataType_name[220:225],
	163: _DataType_name[225:228],
	174: _DataType_name[228:235],
	175: _DataType_name[235:243],
	176: _DataType_name[243:248],
	187: _DataType_name[248:260],
	188: _DataType_name[260:268],
	191: _DataType_name[268:272],
	225: _DataType_name[272:282],
}

func (i DataType) String() string {
	if str, ok := _DataType_map[i]; ok {
		return str
	}
	return "DataType(" + strconv.FormatInt(int64(i), 10) + ")"
}
